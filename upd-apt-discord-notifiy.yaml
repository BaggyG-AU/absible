---
- hosts: all
  gather_facts: true
  become: true
  become_user: root
  serial: 1  # Ensures the playbook runs on one server at a time
  vars:
    semphore_directory: "/home/semaphore"
    update_results_file: "/home/semaphore/automation-updates.txt"
    discord_webhook_url: "https://discord.com/api/webhooks/1268790490774507520/zrgQx-7tNSTkDeP_fWxBcNBfV76ynbD1WgbrS218yTmTcx2mjgU2Vr0vXCdKH-d9-iq6"
    ansible_command_timeout: 900

  tasks:
    - name: Check for the existence of semaphore directory on remote hosts
      stat:
        path: "{{ semphore_directory }}"
      register: semaphore_directory_check
      
    - name: Create semaphore directory if it is absent
      file:
        path: /home/semaphore
        state: directory
        mode: 0755
        group: root
        owner: root
      when: semaphore_directory_check.stat.exists == false
    
    - name: Check for the existence of update results file on remote hosts
      stat:
        path: "{{ update_results_file }}"
      register: update_results_file_stat

    - name: Delete existing update results file on remote hosts
      file:
        path: "{{ update_results_file }}"
        state: absent
      when: update_results_file_stat.stat.exists

    - name: Create/update automation-updates.txt file on remote hosts
      ansible.builtin.copy:
        content: ""
        dest: /home/semaphore/automation-updates.txt

    - name: Run updates on remote hosts
      apt:
        update_cache: yes
        upgrade: safe
        autoremove: yes
        autoclean: yes
      register: apt_upgrade

    - name: Capture update results on remote hosts
      lineinfile:
        path: "{{ update_results_file }}"
        line: "{{ inventory_hostname }} - Update {{ 'succeeded' if apt_upgrade.changed else 'failed' }}"
      when: apt_upgrade.changed or apt_upgrade.failed

    - name: Send Discord message on update success on remote hosts
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: "{\"content\":\"Update succeeded on {{ inventory_hostname }}\"}"
      when: apt_upgrade.changed
      register: discord_result_success

    - name: Send Discord message on update failure on remote hosts
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: "{\"content\":\"Update failed on {{ inventory_hostname }}\"}"
      when: apt_upgrade.failed
      register: discord_result_success
      fail_when: discord_result_success.status != 200 #Fail the playbook on Discord message failure

 #   - name: Fail the playbook on Discord message failure (failure)
 #     fail:
 #       msg: "Failed to send Discord message on failure: {{ discord_result_failure.msg }}"
 #     when: discord_result_failure.status.failed
      
    - name: Check if remote host reboot is required
      become: true
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required
      
    - name: Send Discord message if remote host requires reboot
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: "{\"content\":\"{{ inventory_hostname }} requires reboot\"}"
      when: reboot_required.stat.exists
      register: discord_result_failure_local
      fail_when: discord_result_failure_local.status != 200 #Fail the playbook on Discord message failure

#    - name: Fail the playbook on Discord message failure on local host (failure)
#      fail:
#        msg: "Failed to send Discord message on failure: {{ discord_result_failure_local.msg }}"
#      when: discord_result_failure_local.status != 200

- hosts: localhost
  gather_facts: true
  become: true
  become_user: root
  vars:
    semphore_directory: "/home/semaphore"
    update_results_file: "/home/semaphore/automation-updates.txt"
    discord_webhook_url: "https://discord.com/api/webhooks/1268790490774507520/zrgQx-7tNSTkDeP_fWxBcNBfV76ynbD1WgbrS218yTmTcx2mjgU2Vr0vXCdKH-d9-iq6"
    ansible_command_timeout: 900
    local_host_reboot_delay: 1800  # 30 minutes

  tasks:
    - name: Check for the existence of semaphore directory on remote hosts
      stat:
        path: "{{ semphore_directory }}"
      register: semaphore_directory_check
      
    - name: Create semaphore directory if it is absent
      file:
        path: /home/semaphore
        state: directory
        mode: 0755
        group: root
        owner: root
      when: semaphore_directory_check.stat.exists == false
      register: local_update_results_file_stat

    - name: Delete existing update results file on local host
      file:
        path: "{{ update_results_file }}"
        state: absent
      when: local_update_results_file_stat.stat.exists

    - name: Create/update automation-updates.txt file on local host
      ansible.builtin.copy:
        content: ""
        dest: /home/semaphore/automation-updates.txt

    - name: Send Discord message on update success on local host
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: "{\"content\":\"Update succeeded on local host\"}"
      when: apt_upgrade.changed
      register: discord_result_success_local

    - name: Fail the playbook on Discord message failure on local host (success)
      fail:
        msg: "Failed to send Discord message on success: {{ discord_result_success_local.msg }}"
      when: discord_result_success_local.status != 200

    - name: Send Discord message on update failure on local host
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: "{\"content\":\"Update failed on local host\"}"
      when: apt_upgrade.failed
      register: discord_result_failure_local

    - name: Fail the playbook on Discord message failure on local host (failure)
      fail:
        msg: "Failed to send Discord message on failure: {{ discord_result_failure_local.msg }}"
      when: discord_result_failure_local.status != 200

    - name: Check if local host reboot is required
      become: true
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required
      
    - name: Send Discord message if local host requires reboot
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: "{\"content\":\"local host requires reboot\"}"
      when: reboot_required.stat.exists
      register: discord_result_failure_local

    - name: Fail the playbook on Discord message failure on local host (failure)
      fail:
        msg: "Failed to send Discord message on failure: {{ discord_result_failure_local.msg }}"
      when: discord_result_failure_local.status != 200

#      command: "needs-restarting -r || reboot"
#      async: 0
#      poll: 0
#      register: reboot_check_local
#      when: apt_upgrade.changed

    - name: Delay local host reboot if required
      async_status:
        jid: "{{ reboot_check_local.ansible_job_id }}"
      delay: "{{ local_host_reboot_delay }}"
      when: apt_upgrade.changed